I"G<h1 id="리펙터링이-필요해">리펙터링이 필요해!</h1>
<p>스스로를 백엔드 개발자라고 굳게 믿고 있지만, 작은 회사를 다니는 특성상 프론트엔드에 동작코드들을 자바스크립트로 구현하는 일이 잦다.
함수를 나눠서 짠다고 짜는데도 뭔가 매번 수정하기가 쉽지 않은 코드가 되어 버리곤 한다.
스크립트코드라는 특성들 때문에 일어나는 버그들도 최소화 하기위해 노력하지만 쉽지 않다.
대체 어떻게 리펙토링 해야 하는 것일까? 수정에 수정을 거듭하지만, 다음에도 대거 수정이 되야 하는 것은 아닐까 불안하다.
이런 나를 도와줄 선생님 ‘리펙터링_2판’을 만나보도록 하자!</p>

<h1 id="리펙터링refactoring-이란">리펙터링(Refactoring) 이란?</h1>
<p>리팩터링은 겉으로 드러나는 코드의 기능(겉보기 동작)은 바꾸지 않으면서 내부 구조를 개선하는 방식으로 소프트웨어 시스템을 수정하는 과정이다. 버그가 생길 가능성을 최소로 줄이면서 코드를 정리하는 정제된 방법이다.</p>

<h1 id="리펙터링의-첫-단계">리펙터링의 첫 단계</h1>
<p>리팩터링하기 전에 제대로 된 테스트부터 마련한다. 테스트는 반드시 자가진단하도록 만든다.</p>

:ET